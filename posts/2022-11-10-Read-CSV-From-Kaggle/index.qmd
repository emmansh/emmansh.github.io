---
title: "Read CSV from Kaggle"
description: "How to get data when authentication is needed"
date: 11-13-2022
categories: [python, R, read-csv, authentication] # self-defined categories
image: img\files.jpg
draft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!
execute: 
  warning: false
---

```{r}
#| echo: false
library(reticulate)
use_virtualenv("./pyenv", required = TRUE)
```

Utility function for nice printing
```{r}
#| code-fold: true
#| code-summary: "Code"
#| echo: true
# R
library(kableExtra)

print_table <- function(tbl, n_rows = 10){
  tbl |> 
    head(n_rows) |> 
    kbl(row.names = FALSE) |> 
    kable_styling(bootstrap_options = "striped", full_width = FALSE, position = "left")
}
```


## Download data from Kaggle

::: {.panel-tabset}

# R
```{r}
library(httr)
library(readr)

data_url_on_kaggle <- "https://www.kaggle.com/api/v1/datasets/download/michaelbryantds/witch-trials/trials.csv"

kaggle_username <- Sys.getenv("KAGGLE_USERNAME")
kaggle_password <- Sys.getenv("KAGGLE_PASSWORD")

response_obj <- httr::GET(data_url_on_kaggle, 
                          httr::authenticate(kaggle_username, 
                                             kaggle_password, 
                                             type = "basic"))


df_via_content <- content(response_obj, type = "text/csv")
print_table(df_via_content)
```

# Python
```{python}
import requests
import os
import pandas as pd

data_url_on_kaggle = 'https://www.kaggle.com/api/v1/datasets/download/michaelbryantds/witch-trials/trials.csv'

kaggle_username = os.getenv('KAGGLE_USERNAME_PY')
kaggle_password = os.getenv('KAGGLE_PASSWORD_PY')

response_obj_py = requests.get(data_url_on_kaggle, auth = (kaggle_username, kaggle_password))
df_pandas = pd.read_csv(response_obj_py.url)
```

```{r}
#| echo: false
print_table(py$df_pandas)
```

:::
