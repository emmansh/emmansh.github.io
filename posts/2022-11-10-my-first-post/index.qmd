---
title: "blog post title"
description: "blog post description (appears underneath the title in smaller text) which is included on the listing page"
author:
  - name: Samantha Csik
    url: https://samanthacsik.github.io/
    orcid: 0000-0002-5300-3075
    affiliation: Master of Environmental Data Science Program @ The Bren School (UCSB) & The National Center for Ecological Analysis & Synthesis
    affiliation-url: https://ucsb-meds.github.io/ 
date: 10-24-2022
categories: [Quarto, R, MEDS] # self-defined categories
citation: 
  url: https://samanthacsik.github.io/posts/2022-10-24-quarto-blogs/ 
image: mj.jpg
draft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!
execute: 
  warning: false
---

```{r}
#| echo: false
library(reticulate)
use_virtualenv("./env", required = TRUE)
```


## Set up SQL
```{r}
# R
library(DBI)
library(duckdb)
library(ggplot2)
```

```{r}
# R
## create connection to SQL database
con <- DBI::dbConnect(duckdb::duckdb(), dbdir = "duckdb")
## copy mpg dataset from ggplot2 onto the SQL database, via `con`
dbWriteTable(con, "mpg", ggplot2::mpg, overwrite = TRUE)
```

## Print tables from R, Python, and SQL in panel tabset
```{r}
#| echo: false
# display NaN cells in DT::datatable()
options(htmlwidgets.TOJSON_ARGS = list(na = 'string')) # https://stackoverflow.com/a/48694410/6105259

print_as_dt <- function(x){
  DT::datatable(x,
                rownames = FALSE,
                options = list(
                  dom = 'ltipr', # to remove search box; https://stackoverflow.com/a/61952067/6105259
                  autoWidth = TRUE,
                  columnDefs = list(
                    list(className = 'dt-left', targets = "_all"),
                    list(width = '200px', targets = "_all")
                    )
                  )
                )
}
```

::: {.panel-tabset}

## R
```{r}
ggplot2::mpg |> 
  dplyr::select(manufacturer, displ, cty) |> 
  print_as_dt()
```

## Python

```{python}
import pandas as pd
import numpy as np
x = [1,2,np.nan]
y = [3,4,5]
df = pd.DataFrame({'x':x,'y':y})
```

```{r}
#| echo: false
print_as_dt(py$df)
```


## SQL
```{sql}
#| connection: con
#| output.var: "tab_sql"
SELECT manufacturer, displ, cty
FROM mpg;
```

```{r}
#| echo: false
print_as_dt(tab_sql)
```

:::


## Download data from Kaggle
```{r}
library(httr)
library(readr)

data_url_on_kaggle <- "https://www.kaggle.com/api/v1/datasets/download/michaelbryantds/witch-trials/trials.csv"

my_username <- "kaggle_username_from_json"
my_password <- "kaggle_key_from_json"

response_obj <- httr::GET(data_url_on_kaggle, 
                          httr::authenticate(Sys.getenv("KAGGLE_USERNAME"), Sys.getenv("KAGGLE_PASSWORD"), type = "basic"))


df_via_read_csv <- read_csv(response_obj$url)
print_as_dt(df_via_read_csv)
```

